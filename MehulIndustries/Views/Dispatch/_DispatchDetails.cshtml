@model ViewModels.Dispatch
@Styles.Render("~/Content/css/customsweetcss")
<link href="@Url.Content("~/Content/plugins/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css")" rel="stylesheet">
@using (Html.BeginForm("Add", "Dispatch", FormMethod.Post, new { @class = "form-horizontal m-t-20", @id = "frmOrder" }))
{
    <div class="row">

        <div class="col-md-3">
            <div class="form-group">
                <label for="hori-pass1" class="col-sm-4 control-label">Order No</label>
                <div class="col-sm-7">
                    <input type="hidden" value="@Model.ID" id="DispatchID" />
                    @Html.TextBoxFor(x => x.order.OrderNo, new { @class = "form-control disabled", @placeholder = "Order No" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="hori-pass1" class="col-sm-4 control-label">DO No</label>
                <div class="col-sm-7">
                    @Html.TextBox("DONo", Model.DONo, new { @class = "form-control", @placeholder = "Dispatch No" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="hori-pass1" class="col-sm-4 control-label">Date</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.DODate, "{0:dd/MM/yyyy}", new { @class = "datepicker form-control", @data_mask = "__/__/____", @placeholder = "Order Date" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="hori-pass1" class="col-sm-4 control-label">Booking At</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.order.BookingAt, new { @class = "form-control", @placeholder = "Booking At" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label for="inputEmail3" class="col-sm-4 control-label">Party</label>
        <div class="col-sm-7">
            @if (ViewBag.Parties != null)
            {
                @Html.DropDownListFor(x => x.order.PartyID, new SelectList(ViewBag.Parties, "ID", "Name"), "-- Select Party --", new { @class = "form-control disabled" })
            }
            else
            {
                @Html.DropDownListFor(x => x.order.PartyID, new List<SelectListItem>(), new { @class = "form-control" })
            }
        </div>
    </div>
    <div class="form-group">
        <label for="inputEmail3" class="col-sm-4 control-label">Delivery Address</label>
        <div class="col-sm-7">
            @if (ViewBag.Addresses != null)
            {
                @Html.DropDownListFor(x => x.order.DeliveryAddressID, new SelectList(ViewBag.Addresses, "ID", "Address1"), "-- Select Address --", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(x => x.order.DeliveryAddressID, new List<SelectListItem>(), new { @class = "form-control" })
            }
        </div>
    </div>
    <div class="form-group">
        <label for="inputEmail3" class="col-sm-4 control-label">Transport</label>
        <div class="col-sm-7">
            @if (ViewBag.Transports != null)
            {
                @Html.DropDownListFor(x => x.order.TransportID, new SelectList(ViewBag.Transports, "ID", "Name"), "-- Select Transport --", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(x => x.order.TransportID, new List<SelectListItem>(), new { @class = "form-control" })
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            @if (Model.details != null && Model.details.Count > 0)
            {
                <table id="tblOrderDetails" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <td>
                                Delete?
                            </td>
                            <td>
                                Product
                            </td>
                            <td>
                                Shade
                            </td>
                            <td>
                                Packings
                            </td>
                            <td>
                                Total
                            </td>
                        </tr>
                    </thead>
                    <tbody>

                        @{
                var packings = Model.details.Select(x => new { ProductID = x.ProductID, ShadeID = x.ShadeID }).Distinct();
                        }
                        @foreach (var detail in packings)
                        {
                            if (Model.details.Where(x => x.ProductID == detail.ProductID && x.ShadeID == detail.ShadeID).Count() > 0 &&
                                Model.details.Where(x => x.ProductID == detail.ProductID && x.ShadeID == detail.ShadeID).Sum(x=>Convert.ToDecimal(x.Qty))>0)
                            {
                                <tr>
                                    <td>
                                        <button data-deldetail type="button" class="btn btn-sm btn-danger waves-effect waves-light m-l-5">
                                            <i class="ti-trash"></i>&nbsp;&nbsp;Delete
                                        </button>
                                    </td>
                                    <td class="col-md-2">
                                        @if (ViewBag.Products != null)
                                        {
                                            @Html.DropDownList("ddlProduct", new SelectList(ViewBag.Products, "ID", "Name", detail.ProductID), "-- Select Product --", new { @class = "form-control disabled" })
                                        }
                                        else
                                        {
                                            @Html.DropDownList("ddlProduct", new List<SelectListItem>(), new { @class = "form-control disabled" })
                                        }
                                    </td>
                                    <td class="col-md-2">
                                        @{
                                var productShades = BAL.ShadeLogic.GetShadeByProductID(detail.ProductID).Select(x => new { ShadeID = x.ShadeID, ShadeName = x.ShadeName }).Distinct();
                                        }
                                        @if (productShades != null)
                                        {
                                            @Html.DropDownList("ddlShade", new SelectList(productShades, "ShadeID", "ShadeName", detail.ShadeID), "-- Select Shade --", new { @class = "form-control disabled" })
                                        }
                                        else
                                        {
                                            @Html.DropDownList("ddlShade", new List<SelectListItem>(), new { @class = "form-control disabled" })
                                        }
                                    </td>
                                    <td class="col-md-7">
                                        <table id="tblPackings" class="table table-striped table-bordered">
                                            <thead>
                                                <tr>
                                                    <td>
                                                        Name
                                                    </td>
                                                    <td>
                                                        Qty
                                                    </td>
                                                    <td>
                                                        Rate
                                                    </td>
                                                    <td>
                                                        Total
                                                    </td>
                                                    <td style="display:none">
                                                        Available
                                                    </td>
                                                    <td style="display:none">
                                                        In Order
                                                    </td>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @{
                                        var packingsDetail = Model.details.Where(x => x.ProductID == detail.ProductID && x.ShadeID == detail.ShadeID);
                                        if (packingsDetail != null)
                                        {
                                            foreach (var packing in packingsDetail)
                                            {
                                                if (Convert.ToDecimal(packing.Qty) > 0)
                                                {
                                                    <tr data-odetailid="@packing.OrderDetailID" data-recordid="@packing.ID">
                                                        <td class="col-md-4" data-packingid="@packing.PackingID">@packing.PackingName</td>
                                                        <td class="col-md-3">
                                                            <input type="text" class="numeric form-control" value="@packing.Qty" />
                                                        </td>
                                                        <td class="col-md-3">
                                                            <input type="text" class="numeric form-control" value="@packing.Rate" />
                                                        </td>
                                                        <td class="col-md-2">@(Convert.ToDecimal(packing.Qty) * Convert.ToDecimal(packing.Rate))</td>
                                                        <td style="display:none"></td>
                                                        <td style="display:none"></td>
                                                    </tr>
                                                }

                                            }
                                        }
                                                }
                                            </tbody>
                                        </table>
                                    </td>
                                    <td class="col-md-1"></td>
                                </tr>
                            }

                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2">
                                Total
                            </td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
            }
            @*else
            {
                <table id="tblOrderDetails" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <td>
                                Delete?
                            </td>
                            <td>
                                Product
                            </td>
                            <td>
                                Shade
                            </td>
                            <td>
                                Packings
                            </td>
                            <td>
                                Total
                            </td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var detail in Model.order.orderDetail)
                        {
                            <tr>
                                <td>
                                    <button data-deldetail type="button" class="btn btn-sm btn-danger waves-effect waves-light m-l-5">
                                        <i class="ti-trash"></i>&nbsp;&nbsp;Delete
                                    </button>
                                </td>
                                <td class="col-md-2">
                                    @if (ViewBag.Products != null)
                                    {
                                        @Html.DropDownList("ddlProduct", new SelectList(ViewBag.Products, "ID", "Name", detail.ProductID), "-- Select Product --", new { @class = "form-control disabled" })
                                    }
                                    else
                                    {
                                        @Html.DropDownList("ddlProduct", new List<SelectListItem>(), new { @class = "form-control disabled" })
                                    }
                                </td>
                                <td class="col-md-2">
                                    @{
                            var productShades = BAL.ShadeLogic.GetShadeByProductID(detail.ProductID).Select(x => new { ShadeID = x.ShadeID, ShadeName = x.ShadeName }).Distinct();
                                    }
                                    @if (productShades != null)
                                    {
                                        @Html.DropDownList("ddlShade", new SelectList(productShades, "ShadeID", "ShadeName", detail.ShadeID), "-- Select Shade --", new { @class = "form-control disabled" })
                                    }
                                    else
                                    {
                                        @Html.DropDownList("ddlShade", new List<SelectListItem>(), new { @class = "form-control disabled" })
                                    }
                                </td>
                                <td class="col-md-7">
                                    <table id="tblPackings" class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <td>
                                                    Name
                                                </td>
                                                <td>
                                                    Qty
                                                </td>
                                                <td>
                                                    Rate
                                                </td>
                                                <td>
                                                    Total
                                                </td>
                                                <td style="display:none">
                                                    Available
                                                </td>
                                                <td style="display:none">
                                                    In Order
                                                </td>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                    var packingsDetail = Model.order.orderDetail.Where(x => x.ProductID == detail.ProductID && x.ShadeID == detail.ShadeID);
                                    if (packingsDetail != null)
                                    {
                                        foreach (var packing in packingsDetail)
                                        {
                                            if (Convert.ToDecimal(packing.Qty) > 0)
                                            {
                                                <tr data-odetailid="@packing.ID" data-recordid="0">
                                                    <td class="col-md-4" data-packingid="@packing.PackingID">@packing.PackingName</td>
                                                    <td class="col-md-3">
                                                        <input type="text" class="numeric form-control" value="@packing.Qty" />
                                                    </td>
                                                    <td class="col-md-3">
                                                        <input type="text" class="numeric form-control" value="@packing.Rate" />
                                                    </td>
                                                    <td class="col-md-2">@(Convert.ToDecimal(packing.Qty) * Convert.ToDecimal(packing.Rate))</td>
                                                    <td style="display:none"></td>
                                                    <td style="display:none"></td>
                                                </tr>
                                            }

                                        }
                                    }
                                            }
                                        </tbody>
                                    </table>
                                </td>
                                <td class="col-md-1"></td>
                            </tr>
                        }
                        

                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2">
                                Total
                            </td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
            }*@
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="hori-pass1" class="col-sm-4 control-label">LR No</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.LRNo, new { @class = "form-control", @placeholder = "LR No" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="hori-pass1" class="col-sm-4 control-label">LR Date</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.LRDate, new { @class = "form-control datepicker", @placeholder = "LR Date" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="hori-pass1" class="col-sm-4 control-label">Gate Pass No</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.GatePassNo, new { @class = "form-control", @placeholder = "Gete Pass No" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="hori-pass1" class="col-sm-4 control-label">Gate Pass Date</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.GatePassDate, new { @class = "form-control datepicker", @placeholder = "Gete Pass Date" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="hori-pass1" class="col-sm-4 control-label">Remarks</label>
                <div class="col-sm-7">
                    @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control", @placeholder = "Remarks", @rows = "2" })
                </div>
            </div>
        </div>

    </div>

    <div class="form-group">
        <div class="col-sm-offset-4 col-sm-8">
            <a href="@Url.Action("Add", "Dispatch", new { ID=0})" id="btnAdd" type="button" class="btn btn-lg btn-default waves-effect waves-light m-l-5">
                <i class="ti-plus"></i>&nbsp;&nbsp;Add
            </a>
            <button id="btnSave" type="submit" class="btn btn-lg btn-primary waves-effect waves-light">
                <i class="ti-save"></i>&nbsp;&nbsp; Save
            </button>
            <button id="btnDelete" type="button" class="btn btn-lg btn-danger waves-effect waves-light m-l-5">
                <i class="ti-trash"></i>&nbsp;&nbsp;Delete
            </button>
            <button id="btnView" type="button" class="btn btn-lg btn-warning waves-effect waves-light m-l-5">
                <i class="ti-search"></i>&nbsp;&nbsp;View
            </button>
        </div>
    </div>

}
@Scripts.Render("~/Content/css/customsweetjs")
<script src="@Url.Content("~/Content/plugins/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js")"></script>
<script src="@Url.Content("~/Content/plugins/bootstrap-inputmask/bootstrap-inputmask.min.js")" type="text/javascript"></script>
<script>
    var grandTotal = 0;
    var blankOrderDetailRow = "", currProductDDL = "", blankPackingRow = "";
    var currDetailRow = "";
    function CheckDuplicate(ctrl) {
        if (ctrl.id == 'ddlProduct') {
            var currentShade = $(ctrl).parent().parent().find('>td:nth-child(3) select');
            var products = $('#tblOrderDetails>tbody>tr td:nth-child(2) select').filter(function (index, element) { return $(element).val() == $(ctrl).val() });
            $.each(products, function (index, element) {
                if ($(element).parent().parent().find('>td:nth-child(3) select').filter(function (sindex, selement) { return $(selement).val() == $(currentShade).val() }).length > 0 &&
                    $(element).parent().parent().index() != $(ctrl).parent().parent().index()) {
                    $(ctrl).val("");
                    return true;
                }
            });
        }
        else {
            var currentProduct = $(ctrl).parent().parent().find('>td:nth-child(2) select');
            var products = $('#tblOrderDetails>tbody>tr td:nth-child(2) select').filter(function (index, element) { return $(element).val() == $(currentProduct).val() });
            $.each(products, function (index, element) {
                if ($(element).parent().parent().find('>td:nth-child(3) select').filter(function (sindex, selement) { return $(selement).val() == $(ctrl).val() }).length > 0 &&
                    $(element).parent().parent().index() != $(ctrl).parent().parent().index()) {
                    $(ctrl).val("");
                    return true;
                }
            });
        }
        return false;
    }
    function CalculateTotal() {
        grandTotal = 0;
        $.each($('#tblOrderDetails>tbody>tr:visible'), function (index, element) {
            var productTotal = 0;
            $.each($(element).find('table>tbody>tr'), function (packingIndex, packingElement) {
                var packingTotal = GetNumericValue($(this).find('td:eq(1) input').val()) * GetNumericValue($(this).find('td:eq(2) input').val());
                productTotal += packingTotal;
                grandTotal += packingTotal;
                $(this).find('td:eq(3)').text((isNaN(packingTotal) ? 0 : packingTotal));
            });
            $(this).find('>td:eq(4)').text((isNaN(productTotal) ? 0 : productTotal))
        });
        $('#tblOrderDetails tfoot tr td:eq(3)').text((isNaN(grandTotal) ? 0 : grandTotal));
    }
    $(document).ready(function () {
        if ($('#tblOrderDetails>tbody>tr:last').length > 0) {
            blankOrderDetailRow = $('#tblOrderDetails>tbody>tr:last')[0].outerHTML;
        }
        else {
            swal({
                title: "Oopss",
                text: "Either order items are dispatched fully or items are not comes up out of production yet.",
                type: "success"
            }, function () {
                window.location.href = '@Url.Action("Add", "Dispatch", new { ID = 0 })';
            });
        }
        blankPackingRow = $('#tblOrderDetails>tbody>tr:last #tblPackings>tbody>tr:last');
        $('body').on('click', '[data-deldetail]', function () {
            currDetailRow = $(this).parent().parent();
            swal({
                title: "Are you sure want to delete this Transaction?",
                text: "You will not be able to recover this Transaction!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel plz!",
                closeOnConfirm: false,
                closeOnCancel: false
            }, function (isConfirm) {
                if (isConfirm) {
                    currDetailRow.hide();
                    CalculateTotal();
                    swal("Success", "Detail is Deleted :)", "success");
                } else {
                    swal("Cancelled", "Order is safe :)", "error");
                }
            });

        });

        $('body').on('change', '#tblPackings tr td:nth-child(2) input,#tblPackings tr td:nth-child(3) input', function () {
            CalculateTotal();
        });
        //$('body').on('change', '#tblOrderDetails tr td:nth-child(3) select', function () {
        //    if (CheckDuplicate(this) == true) {
        //        return false;
        //    }
        //});
        @*$('body').on('change', '#tblOrderDetails tr td:nth-child(2) select', function () {
            if (CheckDuplicate(this) == true) {
                return false;
            }
            if ($('#tblOrderDetails>tbody>tr:last').index() == $(this).parent().parent().index() && $(this).val().length > 0) {
                $('#tblOrderDetails>tbody').append(blankOrderDetailRow);
            }
            if ($(this).val().length > 0) {
                currProductDDL = this;
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetProductShadesAndPackings", "Product")",
                    data: { ID: $(this).val() },
                    success: function (response) {
                        if (response && response.IsSuccess && response.IsSuccess == true) {
                            if (response.ResponseValue && response.ResponseValue.Shades != null) {
                                var addedShade = [];
                                strAdd = "<option selected>-- Select Shade --</option>";
                                $.each(response.ResponseValue.Shades, function (index, element) {
                                    if (addedShade.filter(function (item, index) { return item == element.ShadeID }).length == 0) {
                                        strAdd += '<option value="' + element.ShadeID + '">' + element.ShadeName + '</option>';
                                        addedShade.push(element.ShadeID);
                                    }
                                });
                                $(currProductDDL).parent().next().find('select').html(strAdd);
                            }
                            if (response.ResponseValue && response.ResponseValue.Packings != null) {
                                $(currProductDDL).parent().next().next().find('#tblPackings tbody').empty();
                                $.each(response.ResponseValue.Packings, function (index, element) {
                                    $(currProductDDL).parent().next().next().find('#tblPackings tbody').append(blankPackingRow.clone());
                                    $(currProductDDL).parent().next().next().find('#tblPackings tbody tr:last td:eq(0)').text(element.PackingName);
                                    $(currProductDDL).parent().next().next().find('#tblPackings tbody tr:last td:eq(0)').attr('data-packingid', element.PackingID);
                                });
                            }
                            CalculateTotal();
                        }
                    }
                });
            }

        });*@
        @*$('#PartyID').on('change', function () {
            if ($('#PartyID').val() != "" && parseInt($('#PartyID').val()) > 0) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetPartyAddresses", "Party")",
                    data: { ID: $('#PartyID').val() },
                    success: function (response) {
                        if (response && response.IsSuccess && response.IsSuccess == true) {
                            strAdd = "<option selected>-- Select Address --</option>";
                            $.each(response.ResponseValue, function (index, element) {
                                var addressString = GetStringValue(element.Address1) + (element.Address1 != null && element.Address1.length > 0 ? + "," + GetStringValue(element.Address2) : GetStringValue(element.Address2)) +
                                    (element.Address2 != null && element.Address2.length > 0 ? + "," + GetStringValue(element.Address3) : GetStringValue(element.Address3)) +
                                    (element.Address3 != null && element.Address3.length > 0 ? + "," + GetStringValue(element.City) : GetStringValue(element.City)) +
                                    (element.City != null && element.City.length > 0 ? + "," + GetStringValue(element.State) : GetStringValue(element.State));
                                if (addressString.length > 0) {
                                    strAdd += '<option value="' + element.ID + '" data-Transport="' + element.TransportID + '">' + addressString
                                     + '</option>';
                                }
                            });
                            $('#DeliveryAddressID').html(strAdd);
                        }
                    }
                });
            }
            else {
                $('#DeliveryAddressID').empty();
                $('#TransportID').empty();
            }
        });*@
        $('#DeliveryAddressID').on('change', function () {
            var transport = $('#DeliveryAddressID option:selected').data('transport');
            if (transport && transport != null) {
                $('#TransportID').val(transport);
            }
        });
        $('#frmOrder').validate({
            rules: {
                DONo: {
                    required: true,
                    remote: {
                        url: '@Url.Action("CheckDuplicateDONo", "Dispatch")',
                        data: { ID: $('#DispatchID').val() },
                        type: "POST"
                    }
                },
                DODate: {
                    required: true
                }
            },
            messages: {
                DONo: {
                    required: "Please enter DO Number",
                    remote: "DO No is already entered, Please enter another DO No."
                },
                DODate: {
                    required: "Please select Date"
                }
            },

            submitHandler: function (form) {

                if (grandTotal <= 0) {
                    swal({
                        title: "Information",
                        text: "Please enter Dispatch details.",
                        type: "error"
                    }, function () {
                    });
                    return false;
                }
                else {
                    $('.disabled').removeAttr('disabled');
                    var dispatch = {};
                    dispatch.ID = $('#DispatchID').val();
                    dispatch.OrderID = $('#ddlOrders').val();
                    dispatch.DONo = $('#DONo').val();
                    dispatch.DODate = new Date($('#DODate').datepicker("getDate")).toISOString();
                    dispatch.PartyID = $('#order_PartyID').val();
                    dispatch.DeliveryAddressID = $('#order_DeliveryAddressID').val();
                    dispatch.TransportID = $('#order_TransportID').val();
                    dispatch.BookingAt = $('#order_BookingAt').val();
                    dispatch.LRNo = $('#LRNo').val();
                    dispatch.LRDate = ($('#LRDate').val().length > 0 ? new Date($('#LRDate').datepicker("getDate")).toISOString() : null);
                    dispatch.GatePassNo = $('#GatePassNo').val();
                    dispatch.GatePassDate = ($('#GatePassDate').val().length > 0 ? new Date($('#GatePassDate').datepicker("getDate")).toISOString() : null);
                    dispatch.Remarks = $('#Remarks').val();
                    dispatch.Total = grandTotal;
                    dispatch.details = [];
                    $.each($('#tblOrderDetails>tbody>tr'), function (index, element) {
                        var currProductRow = this;
                        $.each($(element).find('table>tbody>tr'), function (packingIndex, packingElement) {
                            var detail = {};
                            detail.ID = $(this).data('recordid');
                            detail.OrderDetailID = $(this).data('odetailid');
                            detail.DispatchID = $('#DispatchID').val();
                            detail.ProductID = $(currProductRow).find('>td:eq(1) select').val();
                            detail.ShadeID = $(currProductRow).find('>td:eq(2) select').val();
                            detail.PackingID = $(this).find('>td:eq(0)').data('packingid');
                            detail.Qty = $(this).find('>td:eq(1) input').val();
                            detail.Rate = $(this).find('>td:eq(2) input').val();
                            detail.Total = $(this).find('>td:eq(3)').text();
                            detail.IsDeleted = !$(this).is(':visible');
                            dispatch.details.push(detail);
                        });
                    });

                    $.ajax({
                        url: "@Url.Action("Add","Dispatch")",
                        type: "POST",
                        data: JSON.stringify(dispatch),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.IsSuccess) {
                                DispatchAdded();
                            }
                            else {
                                swal("OOpsss", "There is some problem while saving data, Please try after sometime.", "error");
                            }
                        }
                    });
                }

                return false;
            }
        });
        $('.disabled').attr('disabled', 'disabled');
        $('.datepicker').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy',
            forceParse: false
        });
        CalculateTotal();
    });
</script>
