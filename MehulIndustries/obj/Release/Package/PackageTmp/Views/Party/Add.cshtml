@model ViewModels.Party
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}

@Styles.Render("~/Content/css/customsweetcss")
<div class="row">
    <div class="col-lg-offset-1 col-lg-10">
        <div class="card-box">
            <h4 class="m-t-0 header-title"><b>Party Master</b></h4>
            <p class="text-muted font-13 m-b-30">
                Add/Edit Party here
            </p>
            @using (Html.BeginForm("Add", "Party", FormMethod.Post, new { @class = "form-horizontal m-t-20", @id = "frmParty" }))
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">Name</label>
                                    <div class="col-sm-7">
                                        @Html.HiddenFor(x => x.ID, new { @class = "form-control" })
                                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @placeholder = "Party Name" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-4 control-label">Group</label>
                                    <div class="col-sm-7">
                                        @if (ViewBag.PartyGroups != null)
                                        {
                                            @Html.DropDownListFor(x => x.PartyGroupID, new SelectList(ViewBag.PartyGroups, "ID", "Name"), new { @class = "form-control", @placeholder = "Conversion Factor with litter" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(x => x.PartyGroupID, new List<SelectListItem>(), new { @class = "form-control", @placeholder = "Conversion Factor with litter" })
                                        }
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">Contact Person</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.ContactPerson, new { @class = "form-control", @placeholder = "Contact Person" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">Mobile No</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.MobileNo, new { @class = "form-control", @placeholder = "Mobile No" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">TIN No</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.TINNo, new { @class = "form-control", @placeholder = "TIN No" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">CST No</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.CSTNo, new { @class = "form-control", @placeholder = "CST No" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">Email Id</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.EmailId, new { @class = "form-control", @placeholder = "Email Id" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">LIC No</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.LICNo, new { @class = "form-control", @placeholder = "LIC No" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">PAN No</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.PANNo, new { @class = "form-control", @placeholder = "PAN No" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panel-color panel-primary">
                            <div class="panel-heading">
                                <h3 class="panel-title">Addresses</h3>
                                <p class="panel-sub-title font-13 text-muted">Enter addresses details here</p>
                            </div>
                            <div class="panel-body">
                                <div class="form-group">
                                    <div class="col-md-6 text-left">
                                        <button type="button" class="btn btn-primary waves-effect waves-light" id="btnAddAddress">
                                            <i class="ti-plus"></i>&nbsp;&nbsp;Add Address
                                        </button>

                                    </div>
                                    <div class="col-md-6 text-right">
                                        <button type="button" class="btn btn-danger waves-effect waves-light" id="btnRemoveAddress">
                                            <i class="ti-close"></i>&nbsp;&nbsp;Remove Address
                                        </button>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="table-responsive">
                                            <table class="table table-bordered" id="tblAddress">
                                                <thead>
                                                    <tr>
                                                        <th>Default</th>
                                                        <th>Address Name</th>
                                                        <th>Full Address</th>
                                                        <th>Phone1</th>
                                                        <th>Mobile1</th>
                                                        <th>Transport</th>
                                                        <th>Booking At</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.Addresses != null && Model.Addresses.Count > 0)
                                                    {
                                                        var i = 0;
                                                        foreach (var address in Model.Addresses)
                                                        {
                                                            <tr data-addressid="@address.ID">
                                                                <td>
                                                                    <div class="checkbox checkbox-primary">
                                                                        <input disabled="" id="@("chkAddressIsDefault"+i)" type="checkbox" @(address.IsDefault ? "checked" : "")>
                                                                        <label for="@("chkAddressIsDefault"+i)">&nbsp;</label>
                                                                    </div>
                                                                </td>

                                                                <td>@address.Name</td>
                                                                <td>
                                                                    @(address.Address1 +
                                                                (!string.IsNullOrEmpty(address.Address2) ? "," + address.Address2 : "") +
                                                                (!string.IsNullOrEmpty(address.Address3) ? "," + address.Address3 : "") +
                                                                (!string.IsNullOrEmpty(address.City) ? "," + address.City : "") +
                                                                (!string.IsNullOrEmpty(address.State) ? "," + address.State : ""))
                                                                </td>
                                                                <td style="display:none">@address.Address1</td>
                                                                <td style="display:none">@address.Address2</td>
                                                                <td style="display:none">@address.Address3</td>
                                                                <td style="display:none">@address.City</td>
                                                                <td style="display:none">@address.State</td>
                                                                <td>@address.Phone1</td>
                                                                <td style="display:none">@address.Phone2</td>
                                                                <td>@address.Mobile1</td>
                                                                <td style="display:none">@address.Mobile2</td>
                                                                <td style="display:none">@address.TransportID</td>
                                                                <td>@address.TransportName</td>
                                                                <td>@address.BookingAt</td>
                                                                <td style="display:none">@address.IsDefault</td>
                                                            </tr>
                                                        }

                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-sm-offset-4 col-sm-8">
                        <a href="@Url.Action("Add", "Party", new { ID=0})" i id="btnAdd" type="button" class="btn btn-lg btn-default waves-effect waves-light m-l-5">
                            <i class="ti-plus"></i>&nbsp;&nbsp;Add
                        </a>
                        <button id="btnSave" type="submit" class="btn btn-lg btn-primary waves-effect waves-light">
                            <i class="ti-save"></i>&nbsp;&nbsp; Save
                        </button>
                        <button id="btnDelete" type="button" class="btn btn-lg btn-danger waves-effect waves-light m-l-5">
                            <i class="ti-trash"></i>&nbsp;&nbsp;Delete
                        </button>
                        <button id="btnView" type="button" class="btn btn-lg btn-warning waves-effect waves-light m-l-5">
                            <i class="ti-search"></i>&nbsp;&nbsp;View
                        </button>
                    </div>

                </div>
            }
        </div>
    </div>
</div>

<div id="address-modal" class="modal-demo" style="width:70%">
    <button type="button" class="close" onclick="Custombox.close();">
        <span>&times;</span><span class="sr-only">Close</span>
    </button>
    <h4 class="custom-modal-title">Enter Address Info</h4>
    <div class="custom-modal-text" id="pnlAddress" style="max-height:500px;overflow:auto;">
        <form class="form-horizontal m-t-20" id="frmAddressDetail">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Name</label>
                        <div class="col-sm-7">
                            <input type="hidden" class="form-control" id="txtAddressID" />
                            <input type="text" class="form-control" placeholder="Name" id="txtAddressName" name="txtAddressName" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Address 1</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="Address 1" id="txtAddress1" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Address 2</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="Address 2" id="txtAddress2" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Address 3</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="Address 3" id="txtAddress3" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">City</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="City" id="txtAddressCity" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">State</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="State" id="txtAddressState" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Phone 1</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="Phone 1" id="txtAddressPhone1" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Phone 2</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="Phone 2" id="txtAddressPhone2" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Mobile 1</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="Mobile 1" id="txtAddressMobile1" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Mobile 2</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="Mobile 2" id="txtAddressMobile2" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Transport</label>
                        <div class="col-sm-7">
                            @if (ViewBag.TransportList != null)
                            {
                                @Html.DropDownList("ddlTransport", new SelectList(ViewBag.TransportList, "ID", "Address"), "-- Select Transport --", new { @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownList("ddlTransport", new List<SelectListItem>(), "-- Select Transport --", new { @class = "form-control" })
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="hori-pass1" class="col-sm-4 control-label">Booking At</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" placeholder="Booking At" id="txtAddressBookingAt" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="checkbox checkbox-primary">
                        <input id="chkAddressIsDefault" type="checkbox">
                        <label for="chkAddressIsDefault">
                            Is Default
                        </label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <button id="btnSaveAddress" type="button" class="btn btn-primary waves-effect waves-light m-l-5">
                        Save
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div id="custom-modal" class="modal-demo">
    <button type="button" class="close" onclick="Custombox.close();">
        <span>&times;</span><span class="sr-only">Close</span>
    </button>
    <h4 class="custom-modal-title">Party</h4>
    <div class="custom-modal-text" id="AllParty" style="max-height:500px;overflow:auto;">

    </div>
</div>
@Scripts.Render("~/Content/css/customsweetjs")

<script>
    function PartyAdded(response) {
        swal({
            title: "Information",
            text: "Party is saved successfully.",
            type: "success"
        }, function () {
            $('#btnAdd')[0].click();
        });
    }
    var selectedAddress = 0;

    $(document).ready(function () {
        $('#txtAddressID').val(selectedAddress);
        $('#btnAddAddress').on('click', function () {
            Custombox.open({
                animation: 'rotatedown',
                plugin: 'custommodal',
                overlayspeed: '100',
                overlaycolor: '#36404a',
                target: '#address-modal'
            });
            selectedAddress = -1;
            $('#frmAddressDetail')[0].reset();
        });
        $('#btnSaveAddress').on('click', function () {
            if ($('#frmAddressDetail').valid()) {
                var duplicateAddress = $('#tblAddress tbody tr').filter(function (index, item) {
                    if (selectedAddress == -1) {
                        return $(item).find('td:eq(1)').text() == $('#txtAddressName').val();
                    }
                    else {
                        return $(item).find('td:eq(1)').text() == $('#txtAddressName').val() && $(item).index() != selectedAddress;
                    }
                });
                var defaultAddress = $('#tblAddress tbody tr').filter(function (index, item) {
                    return $(item).find('td:eq(15)').text().toUpperCase() == "TRUE";
                });
                if (defaultAddress.length > 0 && $('#chkAddressIsDefault').is(':checked')) {
                    defaultAddress.find('input[type="checkbox"]').prop('checked', false);
                    defaultAddress.find('td:eq(15)').html("False");
                }
                if (duplicateAddress.length == 0) {
                    var selectedRow = $('#tblAddress tbody tr').filter(function (index, item) { return $(item).index() == selectedAddress; });
                    if (selectedRow.length > 0) {
                        selectedRow.html('<td><div class="checkbox checkbox-primary"><input disabled id="chkAddressIsDefault' + $('#tblAddress tbody tr').length + '" type="checkbox" ' +
                           ($('#chkAddressIsDefault').is(':checked') ? "checked" : "") + '><label for="chkAddressIsDefault' + $('#tblAddress tbody tr').length +
                           '">&nbsp;</label></div></td><td>' + $('#txtAddressName').val() + '</td><td>' +
                            ($('#txtAddress1').val() + ($('#txtAddress2').val().length > 0 ? "," + $('#txtAddress2').val() : "") + ($('#txtAddress3').val().length > 0 ? "," + $('#txtAddress3').val() : "") + ($('#txtAddressCity').val().length > 0 ? "," +
                            $('#txtAddressCity').val() : "") + ($('#txtAddressState').val().length > 0 ? "," + $('#txtAddressState').val() : "")) + '</td><td style="display:none">' +
                            $('#txtAddress1').val() + '</td><td style="display:none">' + $('#txtAddress2').val() + '</td><td style="display:none">' +
                            $('#txtAddress3').val() + '</td><td style="display:none">' + $('#txtAddressCity').val() +
                            '</td><td style="display:none">' + $('#txtAddressState').val() + '</td><td>' + $('#txtAddressPhone1').val() + '</td><td style="display:none">' + $('#txtAddressPhone2').val() +
                            '</td><td>' + $('#txtAddressMobile1').val() + '</td><td style="display:none">' + $('#txtAddressMobile2').val() +
                            '</td><td style="display:none">' + $('#ddlTransport').val() +
                           '</td><td>' + ($('#ddlTransport option:selected').text() == "-- Select Transport --" ? "" :
                           $('#ddlTransport option:selected').text()) + '</td><td>' + $('#txtAddressBookingAt').val() + '</td><td style="display:none">' + $('#chkAddressIsDefault').is(':checked') + '</td>');
                    }
                    else {
                        $('#tblAddress tbody').append('<tr data-addressid="' + $('#txtAddressID').val() +
                           '"><td><div class="checkbox checkbox-primary"><input disabled id="chkAddressIsDefault' + $('#tblAddress tbody tr').length + '" type="checkbox" ' +
                           ($('#chkAddressIsDefault').is(':checked') ? "checked" : "") + '><label for="chkAddressIsDefault' + $('#tblAddress tbody tr').length +
                           '">&nbsp;</label></div></td><td>' + $('#txtAddressName').val() + '</td><td>' +
                           ($('#txtAddress1').val() + ($('#txtAddress2').val().length > 0 ? "," + $('#txtAddress2').val() : "") + ($('#txtAddress3').val().length > 0 ? "," + $('#txtAddress3').val() : "") + ($('#txtAddressCity').val().length > 0 ? "," +
                            $('#txtAddressCity').val() : "") + ($('#txtAddressState').val().length > 0 ? "," + $('#txtAddressState').val() : "")) + '</td><td style="display:none">' +
                           $('#txtAddress1').val() + '</td><td style="display:none">' + $('#txtAddress2').val() + '</td><td style="display:none">' +
                           $('#txtAddress3').val() + '</td><td style="display:none">' + $('#txtAddressCity').val() +
                           '</td><td style="display:none">' + $('#txtAddressState').val() + '</td><td>' + $('#txtAddressPhone1').val() + '</td><td style="display:none">' + $('#txtAddressPhone2').val() +
                           '</td><td>' + $('#txtAddressMobile1').val() + '</td><td style="display:none">' + $('#txtAddressMobile2').val() +
                           '</td><td style="display:none">' + $('#ddlTransport').val() +
                           '</td><td>' + ($('#ddlTransport option:selected').text() == "-- Select Transport --" ? "" : $('#ddlTransport option:selected').text()) +
                           '</td><td>' + $('#txtAddressBookingAt').val() + '</td><td style="display:none">' + $('#chkAddressIsDefault').is(':checked') + '</td></tr>');
                    }
                    $('#frmAddressDetail')[0].reset();
                    Custombox.close();
                }
                else {
                    //$('#AllParty').html("Address name is already exist in this record, Please enter another name.");
                    $.Notification.notify('black', 'top right', 'Address name is already exist in this record, Please enter another name.', '');
                    //swal("Duplicate..!", "Address name is already exist in this record, Please enter another name.", "error");
                }
            }
            else {
                $('#frmAddressDetail').validate();
            }
        });
        $('#btnRemoveAddress').on('click', function () {
            var selectedRow = $('#tblAddress tbody tr').filter(function (index, item) { return $(item).index() == selectedAddress; });
            if (selectedRow.length > 0) {
                swal({
                    title: "Are you sure want to delete this Address?",
                    text: "You will not be able to recover this Address!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel plz!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                }, function (isConfirm) {
                    if (isConfirm) {
                        selectedRow.remove();
                        swal("Done..!", "Address is removed :)", "success");

                    } else {
                        swal("Cancelled", "Address is safe :)", "error");
                    }
                });
            }
            else {
                swal("Cancelled", "Please select any address first...!!", "error");
            }
        });
        $('body').on('click', '#tblAddress tbody tr', function () {
            $(this).siblings().removeClass('btn-default');
            $(this).addClass('btn-default');
            selectedAddress = $(this).index();
        });
        $('body').on('dblclick', '#tblAddress tbody tr', function () {
            selectedAddress = $(this).index();
            var selectedRow = $(this);
            $('#txtAddressID').val($(selectedRow).data('addressid'));
            $('#txtAddressName').val($(selectedRow).find('td:eq(1)').text().trim());
            $('#chkAddressIsDefault').prop('checked', ($(selectedRow).find('input[type="checkbox"]').is(':checked') ? true : false));
            $('#txtAddress1').val($(selectedRow).find('td:eq(3)').text().trim());
            $('#txtAddress2').val($(selectedRow).find('td:eq(4)').text().trim());
            $('#txtAddress3').val($(selectedRow).find('td:eq(5)').text().trim());
            $('#txtAddressCity').val($(selectedRow).find('td:eq(6)').text().trim());
            $('#txtAddressState').val($(selectedRow).find('td:eq(7)').text().trim());
            $('#txtAddressPhone1').val($(selectedRow).find('td:eq(8)').text().trim());
            $('#txtAddressPhone2').val($(selectedRow).find('td:eq(9)').text().trim());
            $('#txtAddressMobile1').val($(selectedRow).find('td:eq(10)').text().trim());
            $('#txtAddressMobile2').val($(selectedRow).find('td:eq(11)').text().trim());
            $('#ddlTransport').val($(selectedRow).find('td:eq(12)').text().trim());
            $('#txtAddressBookingAt').val($(selectedRow).find('td:eq(14)').text().trim());
            Custombox.open({
                animation: 'rotatedown',
                plugin: 'custommodal',
                overlayspeed: '100',
                overlaycolor: '#36404a',
                target: '#address-modal'
            });
        });
        $('#frmParty').validate({
            rules: {
                Name: {
                    required: true,
                    remote: {
                        url: '@Url.Action("CheckDuplicateName","Party")',
                        data: { ID: $('#ID').val() },
                        type: "POST"
                    }
                },
                EmailId: {
                    remote: {
                        url: '@Url.Action("CheckDuplicateEmailId","Party")',
                        data: { ID: $('#ID').val() },
                        type: "POST"
                    }
                }
            },
            messages: {
                Name: {
                    required: "Please enter Name",
                    remote: "Party name is already exist, Please enter another Name."
                },
                EmailId: {
                    remote: "Email is already exist, Please enter another email."
                }
            },

            submitHandler: function (form) {
                if ($('#tblAddress input[type="checkbox"]:checked').length == 0) {
                    $.Notification.notify('black', 'top right', 'Required', 'Party must have atleast one default address.');
                    return false;
                }
                var Addresses = [];
                $.each($('#tblAddress tbody tr'), function (index, item) {
                    Addresses.push({
                        ID: $(this).data('addressid'),
                        Name: $(this).find('td:eq(1)').text().trim(),
                        IsDefault: ($(this).find('td:eq(15)').text().trim().toUpperCase() == "FALSE" ? false : true),
                        Address1: $(this).find('td:eq(3)').text().trim(),
                        Address2: $(this).find('td:eq(4)').text().trim(),
                        Address3: $(this).find('td:eq(5)').text().trim(),
                        City: $(this).find('td:eq(6)').text().trim(),
                        State: $(this).find('td:eq(7)').text().trim(),
                        Phone1: $(this).find('td:eq(8)').text().trim(),
                        Phone2: $(this).find('td:eq(9)').text().trim(),
                        Mobile1: $(this).find('td:eq(10)').text().trim(),
                        Mobile2: $(this).find('td:eq(11)').text().trim(),
                        TransportID: $(this).find('td:eq(13)').text().trim(),
                        BookingAt: $(this).find('td:eq(14)').text().trim(),
                        PartyID: $('#ID').val()
                    });
                });
                var party = {
                    ID: $('#ID').val(),
                    Name: $('#Name').val(),
                    EmailId: $('#EmailId').val(),
                    ContactPerson: $('#ContactPerson').val(),
                    MobileNo: $('#MobileNo').val(),
                    CSTNo: $('#CSTNo').val(),
                    LICNo: $('#LICNo').val(),
                    PANNo: $('#PANNo').val(),
                    TINNo: $('#TINNo').val(),
                    PartyGroupId: $('#PartyGroupId').val(),
                    Addresses: Addresses
                }
                $.ajax({
                    url: "@Url.Action("Add","Party")",
                    type: "POST",
                    data: JSON.stringify(party),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.IsSuccess) {
                            PartyAdded();
                        }
                        else {
                            swal("OOpsss", "There is some problem while saving data, Please try after sometime.", "error");
                        }
                    }
                });
                return false;
            }
        });

        $('#frmAddressDetail').validate({
            // Specify the validation rules
            rules: {
                txtAddressName: "required",
                //Address: "required",
                //ContactPerson: "required",
                //Mobile: "required"
            },

            // Specify the validation error messages
            messages: {
                txtAddressName: "Please enter Address Name",
                //ContactPerson: "Please enter Contact Person Name",
                // Mobile: "Please enter Mobile Number"
            },

            submitHandler: function (form) {

            }
        });
        $('#btnView').click(function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAll","Party")",
                success: function (response) {
                    $('#AllParty').html(response);
                    Custombox.open({
                        animation: 'rotatedown',
                        plugin: 'custommodal',
                        overlayspeed: '100',
                        overlaycolor: '#36404a',
                        target: '#custom-modal'
                    });
                    $('body').on('dblclick', '#tblParty tbody tr', function () {
                        window.location.href = '@Url.Action("Add", "Party", new { Id="REPLACE"})'.replace('REPLACE', $(this).data('empid'));
                    });
                }
            });

        });
        $('#btnDelete').click(function () {
            if ($('#ID').val() == "0") {
                swal("Please select any record First!", "In order to delete emplyee, You need to select an Party first.")
            }
            else {
                swal({
                    title: "Are you sure want to delete this Party?",
                    text: "You will not be able to recover this record!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel plz!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                }, function (isConfirm) {
                    if (isConfirm) {
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("Delete","Party")",
                            data: { ID: $('#ID').val() },
                            success: function (response) {
                                if (response.IsSuccess == true) {
                                    swal("Deleted!", "Party is deleted Successfully.", "success");
                                    setTimeout(5000, function () {
                                        $('#btnAdd')[0].click();
                                    });
                                }
                                else {
                                    swal("Opssss!", "Something seems wrong while deleting Party.", "error");
                                }
                            }
                        });

                    } else {
                        swal("Cancelled", "Party is safe :)", "error");
                    }
                });
            }
        });
    });
</script>