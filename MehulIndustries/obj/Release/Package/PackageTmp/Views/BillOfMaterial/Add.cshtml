@model ViewModels.BillOfMaterial
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    int labelWidthInt = 3;
    int controlWidthInt = 9;
}
@Styles.Render("~/Content/css/customsweetcss")

<div class="row">
    <div class="col-md-12">
        <ul class="nav nav-tabs navtab-custom">
            <li class="active">
                <a href="#bompanel" data-toggle="tab" aria-expanded="false">
                    <span class="visible-xs"><i class="fa fa-home"></i></span>
                    <span class="hidden-xs">Bill Of Material Info</span>
                </a>
            </li>
            <li class="">
                <a href="#grindingpanel" data-toggle="tab" aria-expanded="false">
                    <span class="visible-xs"><i class="fa fa-user"></i></span>
                    <span class="hidden-xs">Grinding Process Parameters</span>
                </a>
            </li>
            <li class="">
                <a href="#shadepanel" data-toggle="tab" aria-expanded="false">
                    <span class="visible-xs"><i class="fa fa-user"></i></span>
                    <span class="hidden-xs">Shade Matching Parameters</span>
                </a>
            </li>
            <li class="">
                <a href="#labtestingpanel" data-toggle="tab" aria-expanded="false">
                    <span class="visible-xs"><i class="fa fa-user"></i></span>
                    <span class="hidden-xs">Lab Testing Parameters</span>
                </a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="bompanel">
                @using (Html.BeginForm("Add", "BillOfMaterial", FormMethod.Post, new { @class = "form-horizontal m-t-20", @id = "frmBillOfMaterial" }))
                {
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="hori-pass1" class="col-sm-@labelWidthInt control-label">Name</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.HiddenFor(x => x.ID, new { @class = "form-control" })
                                    @if (ViewBag.ProductList != null)
                                    {
                                        @Html.DropDownListFor(x => x.ProductID, new SelectList(ViewBag.ProductList, "ID", "Name"), "-- Select Product --", new { @class = "form-control", @placeholder = "Product" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(x => x.ProductID, new List<SelectListItem>(), "-- Select Product --", new { @class = "form-control", @placeholder = "Product" })
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Shade</label>
                                <div class="col-sm-@controlWidthInt">
                                    @if (ViewBag.ShadeList != null)
                                    {
                                        @Html.DropDownListFor(x => x.ShadeID, new SelectList(ViewBag.ShadeList, "ID", "Name"), new { @class = "form-control", @placeholder = "Shade" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(x => x.ShadeID, new List<SelectListItem>(), new { @class = "form-control", @placeholder = "Shade" })
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Batch Size</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.BatchSize, new { @class = "form-control", @placeholder = "Batch Size", @style = "width:70%;float:left" })
                                    @if (ViewBag.UnitList != null)
                                    {
                                        @Html.DropDownListFor(x => x.BatchUnitID, new SelectList(ViewBag.UnitList, "ID", "Name"), new { @class = "form-control", @placeholder = "Select Unit", @style = "width:30%", @disabled = "disabled" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(x => x.BatchUnitID, new List<SelectListItem>(), new { @class = "form-control", @placeholder = "Select Unit", @disabled = "disabled" })
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-8">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-1 control-label">Remarks</label>
                                <div class="col-sm-5">
                                    @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control", @placeholder = "Add any remarks here", @rows = "3" })
                                </div>
                                <div class="col-md-3">
                                    <button id="btnLastRevision" type="button" class="btn btn-primary waves-effect waves-light">
                                        <i class="ti-save"></i>&nbsp;&nbsp; Get Last Revision
                                    </button>
                                </div>
                                <div class="col-md-3">
                                    <button id="btnOtherShade" type="button" class="btn btn-primary waves-effect waves-light">
                                        <i class="ti-save"></i>&nbsp;&nbsp; Copy from Other shade
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">BOM No</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.BOMNo, new { @class = "form-control", @placeholder = "BOM No", @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Revision No</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.RevisionNo, new { @class = "form-control", @disabled = "disabled", @placeholder = "Revision No" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="panel panel-border panel-primary">
                                <div class="panel-heading">
                                    <h3 class="panel-title">Add Raw Material List required for this Bill of Material</h3>
                                </div>
                                <div class="panel-body">
                                    <table class="table table-striped table-bordered" id="tblRawMaterial">
                                        <thead>
                                            <tr>
                                                <td>
                                                    Raw Material Taken
                                                </td>
                                                <td>
                                                    Qty / KG
                                                </td>
                                                <td>
                                                    Qty / KG
                                                </td>
                                                <td>
                                                    S/G
                                                </td>
                                                <td>
                                                    Volume
                                                </td>
                                                <td>
                                                    Rate / KG
                                                </td>
                                                <td>
                                                    Total
                                                </td>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>
                                                    @if (ViewBag.ProductList != null)
                                                    {
                                                    @Html.DropDownList("ddlProducts", new SelectList(ViewBag.ProductList, "ID", "Name"), "-- Select Product --", new { @class = "form-control", @placeholder = "Product" })
                                                    }
                                                    else
                                                    {
                                                    @Html.DropDownList("ddlProducts", new List<SelectListItem>(), "-- Select Product --", new { @class = "form-control", @placeholder = "Product" })
                                                    }
                                                </td>
                                                <td>
                                                    <input class="numeric form-control" type="text" />
                                                </td>
                                                <td>
                                                    <input class="numeric form-control" type="text" />
                                                </td>
                                                <td>
                                                    <input class="numeric form-control" type="text" />
                                                </td>
                                                <td>
                                                    <input class="numeric form-control" type="text" />
                                                </td>
                                                <td>
                                                    <input class="numeric form-control" type="text" />
                                                </td>
                                                <td>
                                                    <input class="numeric form-control" type="text" />
                                                </td>
                                            </tr>
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td>
                                                    Totals
                                                </td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Std Loss</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.StandardLossPercentage, new { @class = "numeric form-control", @placeholder = "Standard Loss Percentage", @style = "width:50%;float:left" })
                                    <input type="text" id="StdLossTotal" disabled class="numeric form-control" style="width:50%" />
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">RMC / LTR</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.RMCLTR, new { @class = "numeric form-control", @placeholder = "Standard Loss Percentage", @disabled = "disabled", @style = "float:right;width:50%" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Processing</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.Processing, new { @class = "numeric form-control", @placeholder = "Processing", @style = "width:50%;float:left" })
                                    <input type="text" id="ProcessingTotal" disabled class="numeric form-control" style="width:50%" />
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Grinding By H.G.</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.BOMNo, new { @class = "form-control", @placeholder = "Grinding By H.G." })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Shade</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.BOMNo, new { @class = "form-control", @placeholder = "Shade" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Viscocity at 30<sup>.</sup>C</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.BOMNo, new { @class = "form-control", @placeholder = "Viscocity" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Density at 30<sup>.</sup>C By B/4 Cup</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.BOMNo, new { @class = "form-control", @placeholder = "Density" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Shade Match Against</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.BOMNo, new { @class = "form-control", @placeholder = "Shade Match Against" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Shade Passed By</label>
                                <div class="col-sm-@controlWidthInt">
                                    @Html.TextBoxFor(x => x.BOMNo, new { @class = "form-control", @placeholder = "Shade Passed By" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-4 col-sm-8">
                            <a href="@Url.Action("Add", "BillOfMaterial", new { ID=0})" i id="btnAdd" type="button" class="btn btn-lg btn-default waves-effect waves-light m-l-5">
                                <i class="ti-plus"></i>&nbsp;&nbsp;Add
                            </a>
                            <button id="btnSave" type="submit" class="btn btn-lg btn-primary waves-effect waves-light">
                                <i class="ti-save"></i>&nbsp;&nbsp; Save
                            </button>
                            <button id="btnDelete" type="button" class="btn btn-lg btn-danger waves-effect waves-light m-l-5">
                                <i class="ti-trash"></i>&nbsp;&nbsp;Delete
                            </button>
                            <button id="btnView" type="button" class="btn btn-lg btn-warning waves-effect waves-light m-l-5">
                                <i class="ti-search"></i>&nbsp;&nbsp;View
                            </button>
                        </div>
                    </div>
                }
            </div>

            <div class="tab-pane" id="grindingpanel">
                <form class="form-horizontal m-t-20">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Parameter 1 Title</label>
                                <div class="col-sm-@controlWidthInt">
                                    <input type="text" class="form-control" placeholder="Parameter 1 Title" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Parameter 2 Title</label>
                                <div class="col-sm-@controlWidthInt">
                                    <input type="text" class="form-control" placeholder="Parameter 2 Title" />
                                </div>
                            </div>
                        </div>
                    </div>

                </form>
            </div>
            <div class="tab-pane" id="shadepanel">
                <form class="form-horizontal m-t-20">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Shade</label>
                                <div class="col-sm-@controlWidthInt">
                                    <input type="text" class="form-control" placeholder="Shade" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Shade Match Against</label>
                                <div class="col-sm-@controlWidthInt">
                                    <input type="text" class="form-control" placeholder="Shade Match Against" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Shade Passed By</label>
                                <div class="col-sm-@controlWidthInt">
                                    <input type="text" class="form-control" placeholder="Shade Passed By" />
                                </div>
                            </div>
                        </div>

                    </div>
                </form>

            </div>
            <div class="tab-pane" id="labtestingpanel">
                <sup style="float:right;color:#a80e0e">Make sure that serial number will be allocated at the time of saving in the same manner in which you will make entry</sup>
                <table id="tblLabParameter" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Perticular</th>
                            <th>Standard/YOUR SAMP</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.LabParameters != null)
                        {
                            foreach (var parameter in (IEnumerable<ViewModels.LabParameter>)ViewBag.LabParameters)
                            {
                                <tr>
                                    <td>
                                        @parameter.Name
                                    </td>
                                    <td>
                                        @if (parameter.ValueTypeName == "RANGE")
                                        {
                                            <input type="text" class="numeric form-control" placeholder="Min" style="width: 30%;    float: left;" />
                                            <input type="text" class="numeric form-control" placeholder="Max" style="width: 30%; float: left; margin-left: 5%;" />
                                            <input type="text" class="form-control" placeholder="Unit" style="width: 30%;    float: right;" />
                                        }
                                        else
                                        {
                                            <input type="text" class="form-control" placeholder="Standard" />
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

        </div>


    </div>
</div>

<div id="custom-modal" class="modal-demo">
    <button type="button" class="close" onclick="Custombox.close();">
        <span>&times;</span><span class="sr-only">Close</span>
    </button>
    <h4 class="custom-modal-title">Packing</h4>
    <div class="custom-modal-text" id="AllPacking" style="max-height:500px;overflow:auto;">

    </div>
</div>

<div id="othershade-modal" class="modal-demo">
    <button type="button" class="close" onclick="Custombox.close();">
        <span>&times;</span><span class="sr-only">Close</span>
    </button>
    <h4 class="custom-modal-title">Select Options for Last Reivision</h4>
    <div class="custom-modal-text" id="AllRevision" style="max-height:500px;overflow:auto;">
        <form class="form-horizontal m-t-20">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Shade</label>
                        <div class="col-sm-@controlWidthInt">
                            <select class="form-control" id="ddlOtherShade"></select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-@labelWidthInt control-label">Revision No</label>
                        <div class="col-sm-@controlWidthInt">
                            <input type="text" id="OtherRevisionNo" class="numeric form-control" placeholder="Revision No" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <button id="btnGetVersion" type="button" class="btn btn-primary waves-effect waves-light">
                        <i class="ti-save"></i>&nbsp;&nbsp; Get Raw Material Details
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>
@Scripts.Render("~/Content/css/customsweetjs")

<script>
    function BillOfMaterialAdded(response) {
        swal({
            title: "Information",
            text: "Bill Of Material is saved successfully.",
            type: "success"
        }, function () {
            $('#btnAdd')[0].click();
        });
    }
    var blackRawMaterialRow = "";
    var changedDDL = "";
    var currentRow;
    function CalculateRawMaterialTotal() {
        $(currentRow).find('td:eq(6) input').val(GetNumericValue($(currentRow).find('td:eq(3) input').val()) * GetNumericValue($(currentRow).find('td:eq(5) input').val()));
    }

    function CalculateGrandTotals() {
        var totalQty = 0, totalVolume = 0, totalTotal = 0;
        $.each($('#tblRawMaterial tbody tr'), function (index, element) {
            totalQty += parseFloat(GetNumericValue($(element).find('td:eq(1) input').val()));
            totalVolume += parseFloat(GetNumericValue($(element).find('td:eq(4) input').val()));
            totalTotal += parseFloat(GetNumericValue($(element).find('td:eq(6) input').val()));
        });
        $('#tblRawMaterial tfoot tr td:eq(1)').text(isNaN(totalQty) ? 0 : totalQty);
        $('#tblRawMaterial tfoot tr td:eq(2)').text(isNaN(totalQty) ? 0 : totalQty);
        $('#tblRawMaterial tfoot tr td:eq(4)').text(isNaN(totalVolume) ? 0 : totalVolume);
        $('#tblRawMaterial tfoot tr td:eq(6)').text(isNaN(totalTotal) ? 0 : totalTotal);
        if (GetNumericValue($('#StandardLossPercentage').val()) > 0) {
            $('#StdLossTotal').val(isNaN(totalTotal * GetNumericValue($('#StandardLossPercentage').val()) / 100) ? totalTotal : totalTotal + (totalTotal * GetNumericValue($('#StandardLossPercentage').val()) / 100));

        }
        else {
            $('#StdLossTotal').val(totalTotal);
        }
        if (totalVolume > 0) {
            var rmc = GetNumericValue($('#StdLossTotal').val()) / totalVolume;
            $('#RMCLTR').val(isNaN(rmc) ? 0 : rmc.toFixed(2));
        }
        else {
            $('#RMCLTR').val("0");
        }
        var processing = GetNumericValue($('#Processing').val()) + GetNumericValue($('#RMCLTR').val());
        $('#ProcessingTotal').val(isNaN(processing) ? 0 : processing);
    }

    $(document).ready(function () {
        $('#btnGetVersion').on('click', function () {
            if ($('#ddlOtherShade').val() == "" || $('#OtherRevisionNo').val() == "") {
                swal({
                    title: "Oppsss",
                    text: 'Please select Shade and Revision number both.',
                    type: "error"
                }, function () {

                });
            }
        });
        $('#btnOtherShade').on('click', function () {
            if ($('#ProductID').val() == "" || $('#ShadeID').val() == "") {
                swal({
                    title: "Oppsss",
                    text: 'Please select Product and Shade first.',
                    type: "error"
                }, function () {

                });
            }
            else {
                Custombox.open({
                    animation: 'rotatedown',
                    plugin: 'custommodal',
                    overlayspeed: '100',
                    overlaycolor: '#36404a',
                    target: '#othershade-modal'
                });
            }
        });
        $('#btnLastRevision').on('click', function () {
            swal({
                title: "Are you sure want to get last version of selected product and shade?",
                text: "You will not be able to recover currently entered entries!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, get it!",
                cancelButtonText: "No, cancel plz!",
                closeOnConfirm: false,
                closeOnCancel: false
            }, function (isConfirm) {
                if (isConfirm) {

                } else {
                    swal("Cancelled", "Current entries are safe :)", "error");
                }
            });
        });
        $('#StandardLossPercentage,#Processing').on('change', function () {
            CalculateGrandTotals();
        });
        blackRawMaterialRow = $('#tblRawMaterial tbody tr:first');
        $('body').on('focus', '#tblRawMaterial tbody tr', function () {
            currentRow = this;
        });
        $('body').on('change', '#tblRawMaterial tbody tr td:nth-child(4) select', function () {
            CalculateGrandTotals
        });
        $('body').on('change', '#tblRawMaterial tbody tr td:nth-child(1) select', function () {
            if ($(this).val().length > 0 && $('#tblRawMaterial tbody tr:last').index() == $(this).parent().parent().index()) {
                $('#tblRawMaterial tbody').append(blackRawMaterialRow[0].outerHTML);
            }
            changedDDL = this;
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetProductSalesRateAndGravity", "BillOfMaterial")",
                data: { ProductID: $(this).val() },
                success: function (response) {
                    if (response.IsSuccess == true) {
                        $(currentRow).find('td:eq(3) input').val(response.ResponseValue.SG);
                        $(currentRow).find('td:eq(5) input').val(response.ResponseValue.SR);
                        CalculateRawMaterialTotal();
                        CalculateGrandTotals();
                    }
                }
            });
        });
        $('body').on('change', '#tblRawMaterial tbody tr td:nth-child(2) input,#tblRawMaterial tbody tr td:nth-child(3) input,#tblRawMaterial tbody tr td:nth-child(4) input,#tblRawMaterial tbody tr td:nth-child(5) input', function () {
            if ($(this).parent().index() == 1) {
                $(this).parent().next().find('input').val($(this).val());
            }
            if ($(this).parent().index() == 2) {
                $(this).parent().prev().find('input').val($(this).val());
            }
            CalculateRawMaterialTotal();
            CalculateGrandTotals();
        });
        $('#BatchSize').on('blur', function () {
            if ($(this).data('minbatch') &&
                $(this).data('maxbatch') &&
                (parseFloat($(this).val()) < parseFloat($(this).data('minbatch')) ||
                parseFloat($(this).val()) > parseFloat($(this).data('maxbatch')))) {
                swal({
                    title: "Oppsss",
                    text: 'Value can not be less then ' + $(this).data('minbatch') + ' and greater then ' + $(this).data('maxbatch') + '.',
                    type: "error"
                }, function () {
                    $('#BatchSize').val($('#BatchSize').data('idealbatch'));
                });
            }
        });
        $('#ShadeID').on('change', function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetRevisionNo", "BillOfMaterial")",
                data: { ProductID: $('#ProductID').val(), ShadeID: $('#ShadeID').val() },
                success: function (response) {
                    if (response.IsSuccess == true) {
                        $('#RevisionNo').val(response.ResponseValue);
                    }
                }
            });
        });
        $('#ProductID').on('change', function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetProductShadesAndBatchSize", "BillOfMaterial")",
                data: { ProductID: $('#ProductID').val() },
                success: function (response) {
                    if (response.IsSuccess == true) {
                        $('#ShadeID').html("");
                        strShade = '<option value="">-- Select Shade --</option>';
                        $.each(response.ResponseValue.Shades, function (index, element) {
                            strShade += '<option value="' + element.ID + '">' + element.Name + '</option>';
                        });
                        $('#ShadeID').html(strShade);
                        $('#ddlOtherShade').html(strShade);
                        $('#BatchSize').val(response.ResponseValue.BatchSize.Ideal);
                        $('#BatchSize').attr('data-minBatch', response.ResponseValue.BatchSize.Min);
                        $('#BatchSize').attr('data-maxBatch', response.ResponseValue.BatchSize.Max);
                        $('#BatchSize').attr('data-idealBatch', response.ResponseValue.BatchSize.Ideal);
                        $('#BatchUnitID').val(response.ResponseValue.ProductUnit);
                    }
                }
            });
        });
        $('#frmBillOfMaterial').validate({
            rules: {
                Name: {
                    required: true,
                    remote: {
                        url: '@Url.Action("CheckDuplicateName", "BillOfMaterial")',
                        data: { ID: $('#ID').val() },
                        type: "POST"
                    }
                },
                ConversionFactorWithLtr: {
                    number: true,
                    required: true
                }
            },
            messages: {
                Name: {
                    required: "Please enter Name",
                    remote: "Packing name is already entered, Please enter another packing name."
                },
                ConversionFactorWithLtr: {
                    required: "Please enter Conversion Factor with litter",
                    number: "Please enter numbers only."
                }
            },
            submitHandler: function (form) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Add", "BillOfMaterial")",
                    data: $('#frmBillOfMaterial').serialize(),
                    success: function (response) {
                        BillOfMaterialAdded();
                    }
                });
                return false;
            }
        });
        $('#btnView').click(function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAll", "BillOfMaterial")",
                success: function (response) {
                    $('#AllBillOfMaterial').html(response);
                    Custombox.open({
                        animation: 'rotatedown',
                        plugin: 'custommodal',
                        overlayspeed: '100',
                        overlaycolor: '#36404a',
                        target: '#custom-modal'
                    });
                    $('body').on('dblclick', '#tblBillOfMaterial tbody tr', function () {
                        window.location.href = '@Url.Action("Add", "BillOfMaterial", new { Id = "REPLACE" })'.replace('REPLACE', $(this).data('empid'));
                    });
                }
            });

        });
        $('#btnDelete').click(function () {
            if ($('#ID').val() == "0") {
                swal("Please select any record First!", "In order to delete Bill Of Material, You need to select an Bill Of Material first.")
            }
            else {
                swal({
                    title: "Are you sure want to delete this Bill Of Material?",
                    text: "You will not be able to recover this record!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel plz!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                }, function (isConfirm) {
                    if (isConfirm) {
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("Delete", "BillOfMaterial")",
                            data: { ID: $('#ID').val() },
                            success: function (response) {
                                if (response.IsSuccess == true) {
                                    swal("Deleted!", "Bill Of Material is deleted Successfully.", "success");
                                    setTimeout(5000, function () {
                                        $('#btnAdd')[0].click();
                                    });
                                }
                                else {
                                    swal("Opssss!", "Something seems wrong while deleting Bill Of Material.", "error");
                                }
                            }
                        });

                    } else {
                        swal("Cancelled", "Bill Of Material is safe :)", "error");
                    }
                });
            }
        });
    });
</script>